#!/bin/ksh

function errorHandler
{

if [ $# -lt 2 ]
then
        writeLog "ERROR : " "USAGE: errorHandler <retrurn_code> <error_msg> <success_msg>"
fi

returnValue=$1
errorValue=$2
successValue=$3

if [ $# -eq 2 ]
then
        if [ ${returnValue} -ne 0 ]
        then
                writeLog "ERROR : " "${errorValue} Exiting with value ${returnValue}!!!"
                exit ${returnValue}
        fi
fi

if [ $# -eq 3 ]
then
        if [ ${returnValue} -ne 0 ]
        then
                writeLog "ERROR : " "${errorValue} Exiting with value ${returnValue}!!!"
                exit ${returnValue}
		else
				writeLog "SUCCESS : " "${successValue} Exiting with value ${returnValue}!!!"
        fi
fi

}

function writeLog
{
type=$1
msg=$2
timestamp=`date '+%Y-%m-%d %H:%M:%S'`

echo "${timestamp}:[${type}] ${msg}" >> ${log_file}
}

#MAIN
#INPUT CHECK
#============================================================================================================================
if [ $# -ne 5 ]
then
        errorHandler 1 "Script Usage: viewCreation.sh <TableListFile> <SourceDatabase> <DestinationDataBase> <env> <country>"
fi

#Assigning INPUT
#============================================================================================================================
table_list_file=$1
source_database=$2
destination_dataBase=$3
env=$4
country=$5

DATE=`date +%Y-%m-%d`
timestamp=`date +%Y%m%d_%H%M%S`

#Environment Path
log_path=${HOME}/work/report/logs
file_path=${HOME}/work/report
archive_path=${HOME}/work/report


# Archive old files

mv ${file_path}/drop*${table_list_file}* ${archive_path}/
mv ${file_path}/column*${table_list_file}* ${archive_path}/
mv ${file_path}/*${table_list_file}*.hql ${archive_path}/

log_file=${log_path}/view_creation_${table_list_file}_${timestamp}.log
hql_file=viewCreation_${table_list_file}_${timestamp}.hql
column_list=column_list_${table_list_file}
column_result=column_result_${table_list_file}
drop_view_list=drop_view_${table_list_file}
drop_masked_view_list=drop_masked_view_${table_list_file}
mask_file=${table_list_file}_maskfile
hql_mask_file=maskviewCreation_${table_list_file}_${timestamp}.hql

#echo ${parameters} > ${file_path}/${hql_file}
> ${column_list}
> ${file_path}/${hql_file}
> ${file_path}/${drop_view_list}
> ${file_path}/${hql_mask_file}
> ${log_file}

writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Preparing query to fetch column list from the sources"

#remove when running with beeline
echo "set hive.cli.print.header=true;" >> ${file_path}/${column_list}
while IFS='' read -r line || [[ -n "$line" ]]; do
	echo "drop view if exists $destination_dataBase.${line}_full_vw;" >> ${file_path}/${drop_view_list}
	echo "drop view if exists $destination_dataBase.${line}_masked_vw;" >> ${file_path}/${drop_masked_view_list}
	echo "select * from ${source_database}.$line limit 0;" >> ${file_path}/${column_list}
done < ${file_path}/${table_list_file}


writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Running query to drop already existing full views"

#${BEELINE_CONN} --outputformat=tsv2 -f ${file_path}/${drop_view_list} 2>> ${log_file}
hive -f ${file_path}/${drop_view_list} 2>> ${log_file}
#hive -f ${file_path}/${drop_view_list} 2>> ${log_file}

hiveStatus=$?
errorHandler ${hiveStatus} "There is an issue while dropping existing views" "Dropping existing view from $destination_dataBase completed successfully" 


writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Running query to fetch column list from the sources"

#${BEELINE_CONN} --outputformat=tsv2 -f ${file_path}/${column_list} > ${file_path}/${column_result} 2>> ${log_file}
hive -f ${file_path}/${column_list} > ${file_path}/${column_result} 2>> ${log_file}
hiveStatus=$?
errorHandler ${hiveStatus} "There is an issue while fetching column from ${source_database}" "Fetching column from ${source_database} database complete successfully"

chmod 775 ${file_path}/*
sed -i '$d' ${file_path}/${column_result}
sed -i 's/[\t]/,/g' ${file_path}/${column_result}

writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Preparing query to create full views"

while IFS='' read -r line || [[ -n "$line" ]]; do
	#echo $line > $CAL_HOME_PK/Temp/test.txt
	tableName=`echo $line | cut -d. -f1`
	
	echo "create view if not exists ${destination_dataBase}.${tableName}_full_vw as select ${line} from ${source_database}.${tableName};" >> ${file_path}/${hql_file}
done < ${file_path}/${column_result}

#Running query to create full views
writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Running query to create full views"

#${BEELINE_CONN} --outputformat=tsv2 -f ${file_path}/${hql_file} 2>> ${log_file}
hive -f ${file_path}/${hql_file} 2>> ${log_file}
hiveStatus=$?
errorHandler ${hiveStatus} "There is an issue while creating full views" "Full view creation completed successfully"


writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Running query to drop already existing masked views"

#${BEELINE_CONN} --outputformat=tsv2 -f ${file_path}/${drop_masked_view_list} 2>> ${log_file}
hive -f ${file_path}/${drop_masked_view_list} 2>> ${log_file}

hiveStatus=$?
errorHandler ${hiveStatus} "There is an issue while dropping existing views" "Dropping existing view from $destination_dataBase completed successfully" 

writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Preparing query to create masked views"

cp ${file_path}/${hql_file} ${file_path}/${hql_mask_file}
sed -i "s/_full_vw as select/_masked_vw as select/g" ${file_path}/${hql_mask_file}
while IFS='' read -r line || [[ -n "$line" ]]; do

	remainder=${line}
	#database name
	table_name="${remainder%%.*}"; remainder="${remainder#*.}"
	#table name
	column_name="${remainder%%.*}"; 
	
	sed -i "s/${line}/'XXXXXXXXXX' as ${column_name}/g" ${file_path}/${hql_mask_file}
	
done < ${file_path}/${mask_file}

#Fetching table list
writeLog " " " "
writeLog "==============================================================================" 
writeLog "INFO : " "Running query to create masked views"

#${BEELINE_CONN} --outputformat=tsv2 -f ${file_path}/${hql_mask_file} 2>> ${log_file}
hive -f ${file_path}/${hql_mask_file} 2>> ${log_file}

hiveStatus=$?
errorHandler ${hiveStatus} "There is an issue while creating masked views" "Masked view creation completed successfully"

writeLog " " " "
writeLog "==============================================================================" 
writeLog "SUCCESS : " "JOB to create view completed successfully"
